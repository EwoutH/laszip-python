name: Building

on: [ push, pull_request ]

jobs:
  Build-ManyLinux-Wheels:
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build Wheel
        run: docker run --rm -v `pwd`:/io -e PLAT=manylinux2014_x86_64 quay.io/pypa/manylinux2014_x86_64 /bin/sh /io/scripts/build-wheels-linux.sh

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "manylinux-wheels"
          path: "./wheelhouse/*manylinux*.whl"

  Build-MacOs-Wheels:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Print Python info
        run: |
          which python${{ matrix.python-version }}
          python${{ matrix.python-version }} --version

      - name: Install dependencies (macos)
        run: |
          brew install laszip ninja
          python${{ matrix.python-version }} -m pip install wheel pybind11 delocate

      - name: Build Wheels
        run: python${{ matrix.python-version }} setup.py bdist_wheel

      - name: Delocate wheels
        run: /bin/sh scripts/delocate-wheel.sh

      - name: Test importing the wheel
        run: |
          brew uninstall laszip
          whl_path="$(ls ./dist/*.whl | head -1)"
          python${{ matrix.python-version }} -m pip install $whl_path
          python${{ matrix.python-version }} -c "import laszip"

      - name: Upload wheel as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "masOs-python${{ matrix.python-version }}"
          path: "./dist/*.whl"
